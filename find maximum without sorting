import java.util.PriorityQueue;
import java.util.Collections;

class Solution {
    public int findKthLargest(int[] nums, int k) {
        // Create a max-heap (PriorityQueue with a custom comparator for descending order)
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());

        // Add all elements to the max-heap
        for (int num : nums) {
            maxHeap.add(num);
        }

        // Extract the maximum element k times
        for (int i = 1; i < k; i++) {
            maxHeap.poll();
        }

        // The k-th extracted element is the k-th largest element
        return maxHeap.peek();
    }
}
