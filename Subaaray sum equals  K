class Solution {
    public int subarraySum(int[] nums, int k) {
        //optimal approach

        //using hashmap
        int n=nums.length;
        int prefixsum=0;
        int count=0;
        HashMap<Integer,Integer> map = new HashMap<>();
        

        map.put(0,1);
        for( int i=0;i<n;i++){
            prefixsum+=nums[i];

            if(map.containsKey(prefixsum-k)){
                count+=map.get(prefixsum-k);

            }
            map.put(prefixsum,map.getOrDefault(prefixsum,0)+1);
           
        }
        return count;


         
         
         //brute approach take sum of all subaray.
         
         /*int n=nums.length;
        int count=0;
        for(int i=0;i<n;i++){
            int sum=0;
            for(int j=i;j<n;j++){
                sum+=nums[j];
                if(sum==k){
                    count++;
                }
            }

        }
        return count;*/
    }
}
